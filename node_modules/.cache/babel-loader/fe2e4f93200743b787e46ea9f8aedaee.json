{"ast":null,"code":"import { a as getWindow, g as getDocument } from './ssr-window.esm.mjs';\nimport { a as elementParents, o as elementStyle, e as elementChildren, s as setCSSProperty, f as elementOuterSize, p as elementNextAll, q as elementPrevAll, j as getTranslate, r as animateCSSModeScroll, n as nextTick, t as showWarning, c as createElement, d as now, u as extend, h as elementIndex, v as deleteProps } from './utils.mjs';\nlet support;\n\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && document.documentElement.style && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\n\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n\n  return support;\n}\n\nlet deviceCached;\n\nfunction calcDevice(_temp) {\n  let {\n    userAgent\n  } = _temp === void 0 ? {} : _temp;\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel'; // iPadOs 13 fix\n\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  } // Android\n\n\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  } // Export object\n\n\n  return device;\n}\n\nfunction getDevice(overrides) {\n  if (overrides === void 0) {\n    overrides = {};\n  }\n\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n\n  return deviceCached;\n}\n\nlet browser;\n\nfunction calcBrowser() {\n  const window = getWindow();\n  const device = getDevice();\n  let needPerspectiveFix = false;\n\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n\n  const isWebView = /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent);\n  const isSafariBrowser = isSafari();\n  const need3dFix = isSafariBrowser || isWebView && device.ios;\n  return {\n    isSafari: needPerspectiveFix || isSafariBrowser,\n    needPerspectiveFix,\n    need3dFix,\n    isWebView\n  };\n}\n\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n\n  return browser;\n}\n\nfunction Resize(_ref) {\n  let {\n    swiper,\n    on,\n    emit\n  } = _ref;\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(_ref2 => {\n          let {\n            contentBoxSize,\n            contentRect,\n            target\n          } = _ref2;\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}\n\nfunction Observer(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const observers = [];\n  const window = getWindow();\n\n  const attach = function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n\n  const init = () => {\n    if (!swiper.params.observer) return;\n\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.hostEl);\n\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    } // Observe container\n\n\n    attach(swiper.hostEl, {\n      childList: swiper.params.observeSlideChildren\n    }); // Observe wrapper\n\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}\n/* eslint-disable no-underscore-dangle */\n\n\nvar eventsEmitter = {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n\n    function onceHandler() {\n      self.off(events, onceHandler);\n\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      handler.apply(self, args);\n    }\n\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n\n    return self;\n  },\n\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n\n    return self;\n  },\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n\n  emit() {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n};\n\nfunction updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  } // Subtract paddings\n\n\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}\n\nfunction updateSlides() {\n  const swiper = this;\n\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(swiper.getDirectionLabel(label)) || 0);\n  }\n\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n\n  swiper.virtualSize = -spaceBetween; // reset margins\n\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  }); // reset cssMode offsets\n\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n\n  if (gridEnabled) {\n    swiper.grid.initSlides(slides);\n  } else if (swiper.grid) {\n    swiper.grid.unsetSlides();\n  } // Calc slides\n\n\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slides);\n    }\n\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[swiper.getDirectionLabel('width')] = ``;\n      }\n\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        slides[i].style[swiper.getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n\n    slidesSizesGrid.push(slideSize);\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n\n  if (params.setWrapperSize) {\n    wrapperEl.style[swiper.getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid);\n  } // Remove last grid elements depending on width\n\n\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n\n    snapGrid = newSlidesGrid;\n\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : swiper.getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap <= 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const offsetSize = (params.slidesOffsetBefore || 0) + (params.slidesOffsetAfter || 0);\n\n    if (allSlidesSize + offsetSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize - offsetSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n\n  swiper.emit('slidesUpdated');\n\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}\n\nfunction updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n\n    return swiper.slides[index];\n  }; // Find slides currently in view\n\n\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  } // Find new height from highest slide in view\n\n\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  } // Update Height\n\n\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}\n\nfunction updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides; // eslint-disable-next-line\n\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}\n\nconst toggleSlideClasses$1 = (slideEl, condition, className) => {\n  if (condition && !slideEl.classList.contains(className)) {\n    slideEl.classList.add(className);\n  } else if (!condition && slideEl.classList.contains(className)) {\n    slideEl.classList.remove(className);\n  }\n};\n\nfunction updateSlidesProgress(translate) {\n  if (translate === void 0) {\n    translate = this && this.translate || 0;\n  }\n\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  let spaceBetween = params.spaceBetween;\n\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isFullyVisible = slideBefore >= 0 && slideBefore <= swiper.size - swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n    }\n\n    toggleSlideClasses$1(slide, isVisible, params.slideVisibleClass);\n    toggleSlideClasses$1(slide, isFullyVisible, params.slideFullyVisibleClass);\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}\n\nfunction updateProgress(translate) {\n  const swiper = this;\n\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\n\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nconst toggleSlideClasses = (slideEl, condition, className) => {\n  if (condition && !slideEl.classList.contains(className)) {\n    slideEl.classList.add(className);\n  } else if (!condition && slideEl.classList.contains(className)) {\n    slideEl.classList.remove(className);\n  }\n};\n\nfunction updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n\n  let activeSlide;\n  let prevSlide;\n  let nextSlide;\n\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    if (gridEnabled) {\n      activeSlide = slides.filter(slideEl => slideEl.column === activeIndex)[0];\n      nextSlide = slides.filter(slideEl => slideEl.column === activeIndex + 1)[0];\n      prevSlide = slides.filter(slideEl => slideEl.column === activeIndex - 1)[0];\n    } else {\n      activeSlide = slides[activeIndex];\n    }\n  }\n\n  if (activeSlide) {\n    if (!gridEnabled) {\n      // Next Slide\n      nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n\n      if (params.loop && !nextSlide) {\n        nextSlide = slides[0];\n      } // Prev Slide\n\n\n      prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n\n      if (params.loop && !prevSlide === 0) {\n        prevSlide = slides[slides.length - 1];\n      }\n    }\n  }\n\n  slides.forEach(slideEl => {\n    toggleSlideClasses(slideEl, slideEl === activeSlide, params.slideActiveClass);\n    toggleSlideClasses(slideEl, slideEl === nextSlide, params.slideNextClass);\n    toggleSlideClasses(slideEl, slideEl === prevSlide, params.slidePrevClass);\n  });\n  swiper.emitSlidesClasses();\n}\n\nconst processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n\n  const slideEl = imageEl.closest(slideSelector());\n\n  if (slideEl) {\n    let lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n\n    if (!lazyEl && swiper.isElement) {\n      if (slideEl.shadowRoot) {\n        lazyEl = slideEl.shadowRoot.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n      } else {\n        // init later\n        requestAnimationFrame(() => {\n          if (slideEl.shadowRoot) {\n            lazyEl = slideEl.shadowRoot.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n            if (lazyEl) lazyEl.remove();\n          }\n        });\n      }\n    }\n\n    if (lazyEl) lazyEl.remove();\n  }\n};\n\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\n\nconst preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n\n  if (swiper.params.grid && swiper.params.grid.rows > 1) {\n    const activeColumn = activeIndex;\n    const preloadColumns = [activeColumn - amount];\n    preloadColumns.push(...Array.from({\n      length: amount\n    }).map((_, i) => {\n      return activeColumn + slidesPerView + i;\n    }));\n    swiper.slides.forEach((slideEl, i) => {\n      if (preloadColumns.includes(slideEl.column)) unlazy(swiper, i);\n    });\n    return;\n  }\n\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n\n  if (swiper.params.rewind || swiper.params.loop) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex < activeIndex || realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(activeIndex - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && (i > slideIndexLastInView || i < activeIndex)) {\n        unlazy(swiper, i);\n      }\n    }\n  }\n};\n\nfunction getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  } // Normalize slideIndex\n\n\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n\n  return activeIndex;\n}\n\nfunction updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n\n    return realIndex;\n  };\n\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if (activeIndex === previousIndex && !swiper.params.loop) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n\n    return;\n  }\n\n  if (activeIndex === previousIndex && swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n    swiper.realIndex = getVirtualRealIndex(activeIndex);\n    return;\n  }\n\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1; // Get real index\n\n  let realIndex;\n\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (gridEnabled) {\n    const firstSlideInColumn = swiper.slides.filter(slideEl => slideEl.column === activeIndex)[0];\n    let activeSlideIndex = parseInt(firstSlideInColumn.getAttribute('data-swiper-slide-index'), 10);\n\n    if (Number.isNaN(activeSlideIndex)) {\n      activeSlideIndex = Math.max(swiper.slides.indexOf(firstSlideInColumn), 0);\n    }\n\n    realIndex = Math.floor(activeSlideIndex / params.grid.rows);\n  } else if (swiper.slides[activeIndex]) {\n    const slideIndex = swiper.slides[activeIndex].getAttribute('data-swiper-slide-index');\n\n    if (slideIndex) {\n      realIndex = parseInt(slideIndex, 10);\n    } else {\n      realIndex = activeIndex;\n    }\n  } else {\n    realIndex = activeIndex;\n  }\n\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n\n    swiper.emit('slideChange');\n  }\n}\n\nfunction updateClickedSlide(el, path) {\n  const swiper = this;\n  const params = swiper.params;\n  let slide = el.closest(`.${params.slideClass}, swiper-slide`);\n\n  if (!slide && swiper.isElement && path && path.length > 1 && path.includes(el)) {\n    [...path.slice(path.indexOf(el) + 1, path.length)].forEach(pathEl => {\n      if (!slide && pathEl.matches && pathEl.matches(`.${params.slideClass}, swiper-slide`)) {\n        slide = pathEl;\n      }\n    });\n  }\n\n  let slideFound = false;\n  let slideIndex;\n\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};\n\nfunction getSwiperTranslate(axis) {\n  if (axis === void 0) {\n    axis = this.isHorizontal() ? 'x' : 'y';\n  }\n\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  if (params.cssMode) {\n    return translate;\n  }\n\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}\n\nfunction setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  } // Check if we need to update progress\n\n\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate() {\n  return -this.snapGrid[0];\n}\n\nfunction maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}\n\nfunction translateTo(translate, speed, runCallbacks, translateBounds, internal) {\n  if (translate === void 0) {\n    translate = 0;\n  }\n\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  if (translateBounds === void 0) {\n    translateBounds = true;\n  }\n\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate; // Update progress\n\n  swiper.updateProgress(newTranslate);\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n\n    if (!swiper.animating) {\n      swiper.animating = true;\n\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          swiper.animating = false;\n\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nvar translate = {\n  getTranslate: getSwiperTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};\n\nfunction setTransition(duration, byController) {\n  const swiper = this;\n\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n    swiper.wrapperEl.style.transitionDelay = duration === 0 ? `0ms` : '';\n  }\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionEmit(_ref) {\n  let {\n    swiper,\n    runCallbacks,\n    direction,\n    step\n  } = _ref;\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n\n  swiper.emit(`transition${step}`);\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n\n    swiper.emit(`slideChangeTransition${step}`);\n\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}\n\nfunction transitionStart(runCallbacks, direction) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}\n\nfunction transitionEnd(runCallbacks, direction) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};\n\nfunction slideTo(index, speed, runCallbacks, internal, initial) {\n  if (index === void 0) {\n    index = 0;\n  }\n\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n\n  if (!enabled && !internal && !initial || swiper.destroyed || swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex]; // Normalize slideIndex\n\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  } // Directions locks\n\n\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && (rtl ? translate > swiper.translate && translate > swiper.minTranslate() : translate < swiper.translate && translate < swiper.minTranslate())) {\n      return false;\n    }\n\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  } // Update progress\n\n\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset'; // Update Index\n\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex); // Update Height\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    swiper.updateSlidesClasses();\n\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n\n    return false;\n  }\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n\n    return true;\n  }\n\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n\n  return true;\n}\n\nfunction slideToLoop(index, speed, runCallbacks, internal) {\n  if (index === void 0) {\n    index = 0;\n  }\n\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n\n  const swiper = this;\n  if (swiper.destroyed) return;\n\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n\n  const gridEnabled = swiper.grid && swiper.params.grid && swiper.params.grid.rows > 1;\n  let newIndex = index;\n\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      let targetSlideIndex;\n\n      if (gridEnabled) {\n        const slideIndex = newIndex * swiper.params.grid.rows;\n        targetSlideIndex = swiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === slideIndex)[0].column;\n      } else {\n        targetSlideIndex = swiper.getSlideIndexByData(newIndex);\n      }\n\n      const cols = gridEnabled ? Math.ceil(swiper.slides.length / swiper.params.grid.rows) : swiper.slides.length;\n      const {\n        centeredSlides\n      } = swiper.params;\n      let slidesPerView = swiper.params.slidesPerView;\n\n      if (slidesPerView === 'auto') {\n        slidesPerView = swiper.slidesPerViewDynamic();\n      } else {\n        slidesPerView = Math.ceil(parseFloat(swiper.params.slidesPerView, 10));\n\n        if (centeredSlides && slidesPerView % 2 === 0) {\n          slidesPerView = slidesPerView + 1;\n        }\n      }\n\n      let needLoopFix = cols - targetSlideIndex < slidesPerView;\n\n      if (centeredSlides) {\n        needLoopFix = needLoopFix || targetSlideIndex < Math.ceil(slidesPerView / 2);\n      }\n\n      if (internal && centeredSlides && swiper.params.slidesPerView !== 'auto' && !gridEnabled) {\n        needLoopFix = false;\n      }\n\n      if (needLoopFix) {\n        const direction = centeredSlides ? targetSlideIndex < swiper.activeIndex ? 'prev' : 'next' : targetSlideIndex - swiper.activeIndex - 1 < swiper.params.slidesPerView ? 'next' : 'prev';\n        swiper.loopFix({\n          direction,\n          slideTo: true,\n          activeSlideIndex: direction === 'next' ? targetSlideIndex + 1 : targetSlideIndex - cols + 1,\n          slideRealIndex: direction === 'next' ? swiper.realIndex : undefined\n        });\n      }\n\n      if (gridEnabled) {\n        const slideIndex = newIndex * swiper.params.grid.rows;\n        newIndex = swiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === slideIndex)[0].column;\n      } else {\n        newIndex = swiper.getSlideIndexByData(newIndex);\n      }\n    }\n  }\n\n  requestAnimationFrame(() => {\n    swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  });\n  return swiper;\n}\n/* eslint no-unused-vars: \"off\" */\n\n\nfunction slideNext(speed, runCallbacks, internal) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled || swiper.destroyed) return swiper;\n\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n\n  let perGroup = params.slidesPerGroup;\n\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    }); // eslint-disable-next-line\n\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n\n    if (swiper.activeIndex === swiper.slides.length - 1 && params.cssMode) {\n      requestAnimationFrame(() => {\n        swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n      });\n      return true;\n    }\n  }\n\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}\n/* eslint no-unused-vars: \"off\" */\n\n\nfunction slidePrev(speed, runCallbacks, internal) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled || swiper.destroyed) return swiper;\n\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    }); // eslint-disable-next-line\n\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n\n  let prevIndex = 0;\n\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  } else if (params.loop && swiper.activeIndex === 0 && params.cssMode) {\n    requestAnimationFrame(() => {\n      swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n    });\n    return true;\n  }\n\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n/* eslint no-unused-vars: \"off\" */\n\n\nfunction slideReset(speed, runCallbacks, internal) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  const swiper = this;\n  if (swiper.destroyed) return;\n\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n/* eslint no-unused-vars: \"off\" */\n\n\nfunction slideToClosest(speed, runCallbacks, internal, threshold) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n\n  if (threshold === void 0) {\n    threshold = 0.5;\n  }\n\n  const swiper = this;\n  if (swiper.destroyed) return;\n\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide() {\n  const swiper = this;\n  if (swiper.destroyed) return;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};\n\nfunction loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n\n  const initSlides = () => {\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    slides.forEach((el, index) => {\n      el.setAttribute('data-swiper-slide-index', index);\n    });\n  };\n\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n  const slidesPerGroup = params.slidesPerGroup * (gridEnabled ? params.grid.rows : 1);\n  const shouldFillGroup = swiper.slides.length % slidesPerGroup !== 0;\n  const shouldFillGrid = gridEnabled && swiper.slides.length % params.grid.rows !== 0;\n\n  const addBlankSlides = amountOfSlides => {\n    for (let i = 0; i < amountOfSlides; i += 1) {\n      const slideEl = swiper.isElement ? createElement('swiper-slide', [params.slideBlankClass]) : createElement('div', [params.slideClass, params.slideBlankClass]);\n      swiper.slidesEl.append(slideEl);\n    }\n  };\n\n  if (shouldFillGroup) {\n    if (params.loopAddBlankSlides) {\n      const slidesToAdd = slidesPerGroup - swiper.slides.length % slidesPerGroup;\n      addBlankSlides(slidesToAdd);\n      swiper.recalcSlides();\n      swiper.updateSlides();\n    } else {\n      showWarning('Swiper Loop Warning: The number of slides is not even to slidesPerGroup, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)');\n    }\n\n    initSlides();\n  } else if (shouldFillGrid) {\n    if (params.loopAddBlankSlides) {\n      const slidesToAdd = params.grid.rows - swiper.slides.length % params.grid.rows;\n      addBlankSlides(slidesToAdd);\n      swiper.recalcSlides();\n      swiper.updateSlides();\n    } else {\n      showWarning('Swiper Loop Warning: The number of slides is not even to grid.rows, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)');\n    }\n\n    initSlides();\n  } else {\n    initSlides();\n  }\n\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}\n\nfunction loopFix(_temp) {\n  let {\n    slideRealIndex,\n    slideTo = true,\n    direction,\n    setTranslate,\n    activeSlideIndex,\n    byController,\n    byMousewheel\n  } = _temp === void 0 ? {} : _temp;\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  const {\n    centeredSlides\n  } = params;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n\n  let slidesPerView = params.slidesPerView;\n\n  if (slidesPerView === 'auto') {\n    slidesPerView = swiper.slidesPerViewDynamic();\n  } else {\n    slidesPerView = Math.ceil(parseFloat(params.slidesPerView, 10));\n\n    if (centeredSlides && slidesPerView % 2 === 0) {\n      slidesPerView = slidesPerView + 1;\n    }\n  }\n\n  const slidesPerGroup = params.slidesPerGroupAuto ? slidesPerView : params.slidesPerGroup;\n  let loopedSlides = slidesPerGroup;\n\n  if (loopedSlides % slidesPerGroup !== 0) {\n    loopedSlides += slidesPerGroup - loopedSlides % slidesPerGroup;\n  }\n\n  loopedSlides += params.loopAdditionalSlides;\n  swiper.loopedSlides = loopedSlides;\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n\n  if (slides.length < slidesPerView + loopedSlides) {\n    showWarning('Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled and not function properly. You need to add more slides (or make duplicates) or lower the values of slidesPerView and slidesPerGroup parameters');\n  } else if (gridEnabled && params.grid.fill === 'row') {\n    showWarning('Swiper Loop Warning: Loop mode is not compatible with grid.fill = `row`');\n  }\n\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  const cols = gridEnabled ? Math.ceil(slides.length / params.grid.rows) : slides.length;\n  const activeColIndex = gridEnabled ? slides[activeSlideIndex].column : activeSlideIndex;\n  const activeColIndexWithShift = activeColIndex + (centeredSlides && typeof setTranslate === 'undefined' ? -slidesPerView / 2 + 0.5 : 0); // prepend last slides before start\n\n  if (activeColIndexWithShift < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeColIndexWithShift, slidesPerGroup);\n\n    for (let i = 0; i < loopedSlides - activeColIndexWithShift; i += 1) {\n      const index = i - Math.floor(i / cols) * cols;\n\n      if (gridEnabled) {\n        const colIndexToPrepend = cols - index - 1;\n\n        for (let i = slides.length - 1; i >= 0; i -= 1) {\n          if (slides[i].column === colIndexToPrepend) prependSlidesIndexes.push(i);\n        } // slides.forEach((slide, slideIndex) => {\n        //   if (slide.column === colIndexToPrepend) prependSlidesIndexes.push(slideIndex);\n        // });\n\n      } else {\n        prependSlidesIndexes.push(cols - index - 1);\n      }\n    }\n  } else if (activeColIndexWithShift + slidesPerView > cols - loopedSlides) {\n    slidesAppended = Math.max(activeColIndexWithShift - (cols - loopedSlides * 2), slidesPerGroup);\n\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / cols) * cols;\n\n      if (gridEnabled) {\n        slides.forEach((slide, slideIndex) => {\n          if (slide.column === index) appendSlidesIndexes.push(slideIndex);\n        });\n      } else {\n        appendSlidesIndexes.push(index);\n      }\n    }\n  }\n\n  swiper.__preventObserver__ = true;\n  requestAnimationFrame(() => {\n    swiper.__preventObserver__ = false;\n  });\n\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(slides[index]);\n      slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(slides[index]);\n      slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n\n  swiper.recalcSlides();\n\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  } else if (gridEnabled && (prependSlidesIndexes.length > 0 && isPrev || appendSlidesIndexes.length > 0 && isNext)) {\n    swiper.slides.forEach((slide, slideIndex) => {\n      swiper.grid.updateSlide(slideIndex, slide, swiper.slides);\n    });\n  }\n\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + Math.ceil(slidesPrepended), 0, false, true);\n\n          if (setTranslate) {\n            swiper.touchEventsData.startTranslate = swiper.touchEventsData.startTranslate - diff;\n            swiper.touchEventsData.currentTranslate = swiper.touchEventsData.currentTranslate - diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          const shift = gridEnabled ? prependSlidesIndexes.length / params.grid.rows : prependSlidesIndexes.length;\n          swiper.slideTo(swiper.activeIndex + shift, 0, false, true);\n          swiper.touchEventsData.currentTranslate = swiper.translate;\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n\n          if (setTranslate) {\n            swiper.touchEventsData.startTranslate = swiper.touchEventsData.startTranslate - diff;\n            swiper.touchEventsData.currentTranslate = swiper.touchEventsData.currentTranslate - diff;\n          }\n        }\n      } else {\n        const shift = gridEnabled ? appendSlidesIndexes.length / params.grid.rows : appendSlidesIndexes.length;\n        swiper.slideTo(swiper.activeIndex - shift, 0, false, true);\n      }\n    }\n  }\n\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix({ ...loopParams,\n          slideTo: c.params.slidesPerView === params.slidesPerView ? slideTo : false\n        });\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix({ ...loopParams,\n        slideTo: swiper.controller.control.params.slidesPerView === params.slidesPerView ? slideTo : false\n      });\n    }\n  }\n\n  swiper.emit('loopFix');\n}\n\nfunction loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};\n\nfunction setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}\n\nfunction unsetGrabCursor() {\n  const swiper = this;\n\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor\n}; // Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\n\nfunction closestElement(selector, base) {\n  if (base === void 0) {\n    base = this;\n  }\n\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n\n    return found || __closestFrom(el.getRootNode().host);\n  }\n\n  return __closestFrom(base);\n}\n\nfunction preventEdgeSwipe(swiper, event, startX) {\n  const window = getWindow();\n  const {\n    params\n  } = swiper;\n  const edgeSwipeDetection = params.edgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold;\n\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n      return true;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  const data = swiper.touchEventsData;\n\n  if (e.type === 'pointerdown') {\n    if (data.pointerId !== null && data.pointerId !== e.pointerId) {\n      return;\n    }\n\n    data.pointerId = e.pointerId;\n  } else if (e.type === 'touchstart' && e.targetTouches.length === 1) {\n    data.touchId = e.targetTouches[0].identifier;\n  }\n\n  if (e.type === 'touchstart') {\n    // don't proceed touch event\n    preventEdgeSwipe(swiper, e, e.targetTouches[0].pageX);\n    return;\n  }\n\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && e.pointerType === 'mouse') return;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n\n  let targetEl = e.target;\n\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return; // change target el for shadow root component\n\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== ''; // eslint-disable-next-line\n\n  const eventPath = e.composedPath ? e.composedPath() : e.path;\n\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot); // use closestElement for shadow root element to get the actual closest for nested shadow root element\n\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  if (!preventEdgeSwipe(swiper, e, startX)) {\n    return;\n  }\n\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n\n  if (e.type === 'pointermove') {\n    if (data.touchId !== null) return; // return from pointer if we use touch\n\n    const id = e.pointerId;\n    if (id !== data.pointerId) return;\n  }\n\n  let targetTouch;\n\n  if (e.type === 'touchmove') {\n    targetTouch = [...e.changedTouches].filter(t => t.identifier === data.touchId)[0];\n    if (!targetTouch || targetTouch.identifier !== data.touchId) return;\n  } else {\n    targetTouch = e;\n  }\n\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n\n    return;\n  }\n\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n\n    return;\n  }\n\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n\n  touches.previousX = touches.currentX;\n  touches.previousY = touches.currentY;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n\n  if (data.isScrolling || e.type === 'touchmove' && data.preventTouchMoveFromPointerMove) {\n    data.isTouched = false;\n    return;\n  }\n\n  if (!data.startMoving) {\n    return;\n  }\n\n  swiper.allowClick = false;\n\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n\n  touches.diff = diff;\n  diff *= params.touchRatio;\n\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  const allowLoopFix = swiper.touchesDirection === 'next' && swiper.allowSlideNext || swiper.touchesDirection === 'prev' && swiper.allowSlidePrev;\n\n  if (!data.isMoved) {\n    if (isLoop && allowLoopFix) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true,\n        detail: {\n          bySwiperTouchMove: true\n        }\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n\n    data.allowMomentumBounce = false; // Grab Cursor\n\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n\n    swiper.emit('sliderFirstMove', e);\n  }\n\n  let loopFixed;\n  new Date().getTime();\n\n  if (data.isMoved && data.allowThresholdMove && prevTouchesDirection !== swiper.touchesDirection && isLoop && allowLoopFix && Math.abs(diff) >= 1) {\n    Object.assign(touches, {\n      startX: pageX,\n      startY: pageY,\n      currentX: pageX,\n      currentY: pageY,\n      startTranslate: data.currentTranslate\n    });\n    data.loopSwapReset = true;\n    data.startTranslate = data.currentTranslate;\n    return;\n  }\n\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n\n  if (diff > 0) {\n    if (isLoop && allowLoopFix && !loopFixed && data.allowThresholdMove && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.slidesSizesGrid[swiper.activeIndex + 1] : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && allowLoopFix && !loopFixed && data.allowThresholdMove && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.slidesSizesGrid[swiper.slidesSizesGrid.length - 1] : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  } // Directions locks\n\n\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  } // Threshold\n\n\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger || params.cssMode) return; // Update active index in free mode\n\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  } // Update progress\n\n\n  swiper.updateProgress(data.currentTranslate); // Update translate\n\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetTouch;\n  const isTouchEvent = e.type === 'touchend' || e.type === 'touchcancel';\n\n  if (!isTouchEvent) {\n    if (data.touchId !== null) return; // return from pointer if we use touch\n\n    if (e.pointerId !== data.pointerId) return;\n    targetTouch = e;\n  } else {\n    targetTouch = [...e.changedTouches].filter(t => t.identifier === data.touchId)[0];\n    if (!targetTouch || targetTouch.identifier !== data.touchId) return;\n  }\n\n  if (['pointercancel', 'pointerout', 'pointerleave', 'contextmenu'].includes(e.type)) {\n    const proceed = ['pointercancel', 'contextmenu'].includes(e.type) && (swiper.browser.isSafari || swiper.browser.isWebView);\n\n    if (!proceed) {\n      return;\n    }\n  }\n\n  data.pointerId = null;\n  data.touchId = null;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && e.pointerType === 'mouse') return;\n\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n\n  data.allowTouchCallbacks = false;\n\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  } // Return Grab Cursor\n\n\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  } // Time diff\n\n\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target, pathTree);\n    swiper.emit('tap click', e);\n\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 && !data.loopSwapReset || data.currentTranslate === data.startTranslate && !data.loopSwapReset) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  } // Find current slide\n\n\n  const swipeToLast = currentPos >= -swiper.maxTranslate() && !swiper.params.loop;\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (swipeToLast || currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (swipeToLast || currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = params.virtual && params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  } // Find current slide size\n\n\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return; // Breakpoints\n\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  } // Save locks\n\n\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled; // Disable locks on resize\n\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  } // Return locks after resize\n\n\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  } // eslint-disable-next-line\n\n\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, false);\n}\n\nfunction onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n\n  if (swiper.params.cssMode || swiper.params.slidesPerView !== 'auto' && !swiper.params.autoHeight) {\n    return;\n  }\n\n  swiper.update();\n}\n\nfunction onDocumentTouchStart() {\n  const swiper = this;\n  if (swiper.documentTouchHandlerProceeded) return;\n  swiper.documentTouchHandlerProceeded = true;\n\n  if (swiper.params.touchReleaseOnEdges) {\n    swiper.el.style.touchAction = 'auto';\n  }\n}\n\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n  if (!el || typeof el === 'string') return; // Touch Events\n\n  document[domMethod]('touchstart', swiper.onDocumentTouchStart, {\n    passive: false,\n    capture\n  });\n  el[domMethod]('touchstart', swiper.onTouchStart, {\n    passive: false\n  });\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('touchmove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('touchend', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('touchcancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('contextmenu', swiper.onTouchEnd, {\n    passive: true\n  }); // Prevent Links Clicks\n\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  } // Resize handler\n\n\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  } // Images loader\n\n\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  swiper.onDocumentTouchStart = onDocumentTouchStart.bind(swiper);\n\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  events(swiper, 'on');\n}\n\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\n\nvar events$1 = {\n  attachEvents,\n  detachEvents\n};\n\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\n\nfunction setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasGrabCursor = swiper.params.grabCursor;\n  const isGrabCursor = breakpointParams.grabCursor;\n  const wasEnabled = params.enabled;\n\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n\n    swiper.emitContainerClasses();\n  }\n\n  if (wasGrabCursor && !isGrabCursor) {\n    swiper.unsetGrabCursor();\n  } else if (!wasGrabCursor && isGrabCursor) {\n    swiper.setGrabCursor();\n  } // Toggle navigation, pagination, scrollbar\n\n\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    if (typeof breakpointParams[prop] === 'undefined') return;\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  const wasLoop = params.loop;\n\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  const hasLoop = swiper.params.loop;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n\n  if (initialized) {\n    if (needsReLoop) {\n      swiper.loopDestroy();\n      swiper.loopCreate(realIndex);\n      swiper.updateSlides();\n    } else if (!wasLoop && hasLoop) {\n      swiper.loopCreate(realIndex);\n      swiper.updateSlides();\n    } else if (wasLoop && !hasLoop) {\n      swiper.loopDestroy();\n    }\n  }\n\n  swiper.emit('breakpoint', breakpointParams);\n}\n\nfunction getBreakpoint(breakpoints, base, containerEl) {\n  if (base === void 0) {\n    base = 'window';\n  }\n\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n\n  return breakpoint || 'max';\n}\n\nvar breakpoints = {\n  setBreakpoint,\n  getBreakpoint\n};\n\nfunction prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\n\nfunction addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper; // prettier-ignore\n\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}\n\nfunction removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  if (!el || typeof el === 'string') return;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}\n\nvar classes = {\n  addClasses,\n  removeClasses\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\n\nvar checkOverflow$1 = {\n  checkOverflow\n};\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  swiperElementNodeName: 'SWIPER-CONTAINER',\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  eventsPrefix: 'swiper',\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopAddBlankSlides: true,\n  loopAdditionalSlides: 0,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideFullyVisibleClass: 'swiper-slide-fully-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};\n\nfunction moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n\n    if (moduleParamName === 'navigation' && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].prevEl && !params[moduleParamName].nextEl) {\n      params[moduleParamName].auto = true;\n    }\n\n    if (['pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].el) {\n      params[moduleParamName].auto = true;\n    }\n\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}\n/* eslint no-param-reassign: \"off\" */\n\n\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events: events$1,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes\n};\nconst extendedDefaults = {};\n\nclass Swiper {\n  constructor() {\n    let el;\n    let params;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      }); // eslint-disable-next-line no-constructor-return\n\n      return swipers;\n    } // Swiper Instance\n\n\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    }); // Extend defaults with modules params\n\n    const swiperParams = extend({}, defaults, allModulesParams); // Extend defaults with passed params\n\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params); // add event listeners\n\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    } // Extend Swiper\n\n\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        pointerId: null,\n        touchId: null\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper'); // Init\n\n    if (swiper.params.init) {\n      swiper.init();\n    } // Return app instance\n    // eslint-disable-next-line no-constructor-return\n\n\n    return swiper;\n  }\n\n  getDirectionLabel(property) {\n    if (this.isHorizontal()) {\n      return property;\n    } // prettier-ignore\n\n\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    swiper.emit('enable');\n  }\n\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n\n    swiper.emit('disable');\n  }\n\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n\n  slidesPerViewDynamic(view, exact) {\n    if (view === void 0) {\n      view = 'current';\n    }\n\n    if (exact === void 0) {\n      exact = false;\n    }\n\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (typeof params.slidesPerView === 'number') return params.slidesPerView;\n\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex] ? Math.ceil(slides[activeIndex].swiperSlideSize) : 0;\n      let breakLoop;\n\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += Math.ceil(slides[i].swiperSlideSize);\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper; // Breakpoints\n\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    let translated;\n\n    if (params.freeMode && params.freeMode.enabled && !params.cssMode) {\n      setTranslate();\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !params.centeredSlides) {\n        const slides = swiper.virtual && params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n\n      if (!translated) {\n        setTranslate();\n      }\n    }\n\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate) {\n    if (needUpdate === void 0) {\n      needUpdate = true;\n    }\n\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n\n    swiper.update();\n  }\n\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true; // Find el\n\n    let el = element || swiper.params.el;\n\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n\n    if (!el) {\n      return false;\n    }\n\n    el.swiper = swiper;\n\n    if (el.parentNode && el.parentNode.host && el.parentNode.host.nodeName === swiper.params.swiperElementNodeName.toUpperCase()) {\n      swiper.isElement = true;\n    }\n\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector()); // Children needs to return slot items\n\n        return res;\n      }\n\n      return elementChildren(el, getWrapperSelector())[0];\n    }; // Find Wrapper\n\n\n    let wrapperEl = getWrapper();\n\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement && !el.parentNode.host.slideSlots ? el.parentNode.host : wrapperEl,\n      hostEl: swiper.isElement ? el.parentNode.host : el,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit'); // Set breakpoint\n\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    } // Add Classes\n\n\n    swiper.addClasses(); // Update size\n\n    swiper.updateSize(); // Update slides\n\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    } // Set Grab Cursor\n\n\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    } // Slide To Initial Slide\n\n\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    } // Create loop\n\n\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    } // Attach events\n\n\n    swiper.attachEvents();\n    const lazyElements = [...swiper.el.querySelectorAll('[loading=\"lazy\"]')];\n\n    if (swiper.isElement) {\n      lazyElements.push(...swiper.hostEl.querySelectorAll('[loading=\"lazy\"]'));\n    }\n\n    lazyElements.forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper); // Init Flag\n\n    swiper.initialized = true;\n    preload(swiper); // Emit\n\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n\n  destroy(deleteInstance, cleanStyles) {\n    if (deleteInstance === void 0) {\n      deleteInstance = true;\n    }\n\n    if (cleanStyles === void 0) {\n      cleanStyles = true;\n    }\n\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy'); // Init Flag\n\n    swiper.initialized = false; // Detach events\n\n    swiper.detachEvents(); // Destroy loop\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    } // Cleanup styles\n\n\n    if (cleanStyles) {\n      swiper.removeClasses();\n\n      if (el && typeof el !== 'string') {\n        el.removeAttribute('style');\n      }\n\n      if (wrapperEl) {\n        wrapperEl.removeAttribute('style');\n      }\n\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideFullyVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n\n    swiper.emit('destroy'); // Detach emitter events\n\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      if (swiper.el && typeof swiper.el !== 'string') {\n        swiper.el.swiper = null;\n      }\n\n      deleteProps(swiper);\n    }\n\n    swiper.destroyed = true;\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n\n    Swiper.installModule(module);\n    return Swiper;\n  }\n\n}\n\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport { Swiper as S, defaults as d };","map":{"version":3,"sources":["C:/Users/Muyagane Harmony/Documents/GitHub/react-portfolio/node_modules/swiper/shared/swiper-core.mjs"],"names":["a","getWindow","g","getDocument","elementParents","o","elementStyle","e","elementChildren","s","setCSSProperty","f","elementOuterSize","p","elementNextAll","q","elementPrevAll","j","getTranslate","r","animateCSSModeScroll","n","nextTick","t","showWarning","c","createElement","d","now","u","extend","h","elementIndex","v","deleteProps","support","calcSupport","window","document","smoothScroll","documentElement","style","touch","DocumentTouch","getSupport","deviceCached","calcDevice","_temp","userAgent","platform","navigator","ua","device","ios","android","screenWidth","screen","width","screenHeight","height","match","ipad","ipod","iphone","windows","macos","iPadScreens","indexOf","os","getDevice","overrides","browser","calcBrowser","needPerspectiveFix","isSafari","toLowerCase","String","includes","major","minor","split","map","num","Number","isWebView","test","isSafariBrowser","need3dFix","getBrowser","Resize","_ref","swiper","on","emit","observer","animationFrame","resizeHandler","destroyed","initialized","createObserver","ResizeObserver","entries","requestAnimationFrame","newWidth","newHeight","forEach","_ref2","contentBoxSize","contentRect","target","el","inlineSize","blockSize","observe","removeObserver","cancelAnimationFrame","unobserve","orientationChangeHandler","params","resizeObserver","addEventListener","removeEventListener","Observer","extendParams","observers","attach","options","ObserverFunc","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","length","observerUpdate","setTimeout","attributes","childList","characterData","push","init","observeParents","containerParents","hostEl","i","observeSlideChildren","wrapperEl","destroy","disconnect","splice","eventsEmitter","events","handler","priority","self","eventsListeners","method","event","once","onceHandler","off","__emitterProxy","_len","arguments","args","Array","_key","apply","onAny","eventsAnyListeners","offAny","index","eventHandler","data","context","_len2","_key2","isArray","slice","unshift","eventsArray","updateSize","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","isNaN","Object","assign","size","updateSlides","getDirectionPropertyValue","node","label","parseFloat","getPropertyValue","getDirectionLabel","slidesEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","call","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","replace","virtualSize","slideEl","marginLeft","marginRight","marginBottom","marginTop","centeredSlides","cssMode","gridEnabled","grid","rows","initSlides","unsetSlides","slideSize","shouldResetSlideSize","slidesPerView","breakpoints","keys","filter","key","slide","updateSlide","slideStyles","getComputedStyle","currentTransform","transform","currentWebKitTransform","webkitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","offsetWidth","Math","floor","swiperSlideSize","abs","slidesPerGroup","min","slidesPerGroupSkip","max","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","loop","groups","ceil","slidesBefore","slidesAfter","groupSize","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","offsetSize","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","watchOverflow","checkOverflow","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","containerModifierClass","hasClassBackfaceClassAdded","classList","contains","maxBackfaceHiddenSlides","add","remove","updateAutoHeight","speed","activeSlides","setTransition","getSlideByIndex","getSlideIndexByData","visibleSlides","activeIndex","offsetHeight","minusOffset","isElement","offsetLeft","offsetTop","swiperSlideOffset","cssOverflowAdjustment","toggleSlideClasses$1","condition","className","updateSlidesProgress","translate","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","minTranslate","originalSlideProgress","slideBefore","slideAfter","isFullyVisible","isVisible","slideVisibleClass","slideFullyVisibleClass","progress","originalProgress","updateProgress","multiplier","translatesDiff","maxTranslate","isBeginning","isEnd","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","firstSlideIndex","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","autoHeight","toggleSlideClasses","updateSlidesClasses","getFilteredSlide","selector","activeSlide","prevSlide","nextSlide","column","slideActiveClass","slideNextClass","slidePrevClass","emitSlidesClasses","processLazyPreloader","imageEl","slideSelector","closest","lazyEl","querySelector","lazyPreloaderClass","shadowRoot","unlazy","removeAttribute","preload","amount","lazyPreloadPrevNext","len","slidesPerViewDynamic","activeColumn","preloadColumns","from","slideIndexLastInView","rewind","realIndex","getActiveIndexByTranslate","normalizeSlideIndex","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","skip","firstSlideInColumn","activeSlideIndex","getAttribute","runCallbacksOnInit","updateClickedSlide","path","pathEl","matches","slideFound","clickedSlide","clickedIndex","undefined","slideToClickedSlide","update","getSwiperTranslate","axis","virtualTranslate","currentTranslate","setTranslate","byController","x","y","z","previousTranslate","newProgress","translateTo","runCallbacks","translateBounds","internal","animating","preventInteractionOnTransition","newTranslate","isH","targetPosition","side","scrollTo","behavior","onTranslateToWrapperTransitionEnd","transitionEnd","duration","transitionDuration","transitionDelay","transitionEmit","direction","step","dir","transitionStart","transition","slideTo","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","allowSlideNext","allowSlidePrev","scrollSnapType","_immediateVirtual","_cssModeVirtualInitialSet","initialSlide","onSlideToWrapperTransitionEnd","slideToLoop","indexAsNumber","newIndex","targetSlideIndex","cols","needLoopFix","loopFix","slideRealIndex","slideNext","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","_clientLeft","clientLeft","slidePrev","normalize","val","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","slideReset","slideToClosest","threshold","currentSnap","nextSnap","slideToIndex","loopedSlides","getSlideIndex","loopCreate","setAttribute","shouldFillGroup","shouldFillGrid","addBlankSlides","amountOfSlides","slideBlankClass","append","loopAddBlankSlides","slidesToAdd","recalcSlides","byMousewheel","loopAdditionalSlides","fill","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","activeColIndex","activeColIndexWithShift","colIndexToPrepend","swiperLoopMoveDOM","prepend","currentSlideTranslate","newSlideTranslate","diff","touchEventsData","startTranslate","shift","controller","control","loopParams","constructor","loopDestroy","newSlidesOrder","swiperSlideIndex","setGrabCursor","moving","simulateTouch","isLocked","touchEventsTarget","cursor","unsetGrabCursor","grabCursor","closestElement","base","__closestFrom","assignedSlot","found","getRootNode","host","preventEdgeSwipe","startX","edgeSwipeDetection","edgeSwipeThreshold","innerWidth","preventDefault","onTouchStart","originalEvent","type","pointerId","targetTouches","touchId","identifier","pageX","touches","pointerType","targetEl","which","button","isTouched","isMoved","swipingClassHasValue","noSwipingClass","eventPath","composedPath","noSwipingSelector","isTargetShadow","noSwiping","allowClick","swipeHandler","currentX","currentY","pageY","startY","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","focusableElements","nodeName","activeElement","blur","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","freeMode","onTouchMove","id","targetTouch","changedTouches","preventedByNestedSwiper","touchReleaseOnEdges","previousX","previousY","diffX","diffY","sqrt","touchAngle","atan2","PI","preventTouchMoveFromPointerMove","cancelable","touchMoveStopPropagation","nested","stopPropagation","touchesDiff","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","allowLoopFix","evt","CustomEvent","bubbles","detail","bySwiperTouchMove","dispatchEvent","allowMomentumBounce","loopFixed","Date","getTime","loopSwapReset","disableParentSwiper","resistanceRatio","resistance","followFinger","onTouchEnd","isTouchEvent","proceed","touchEndTime","timeDiff","pathTree","lastClickTime","currentPos","swipeToLast","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","isNavButtonTarget","navigation","nextEl","prevEl","onResize","setBreakpoint","isVirtualLoop","autoplay","running","paused","clearTimeout","resizeTimeout","resume","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","onScroll","scrollLeft","scrollTop","onLoad","onDocumentTouchStart","documentTouchHandlerProceeded","touchAction","capture","domMethod","swiperMethod","passive","updateOnWindowResize","attachEvents","bind","detachEvents","events$1","isGridEnabled","breakpoint","getBreakpoint","breakpointsBase","currentBreakpoint","breakpointOnlyParams","breakpointParams","originalParams","wasMultiRow","isMultiRow","wasGrabCursor","isGrabCursor","wasEnabled","emitContainerClasses","prop","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","wasLoop","changeDirection","isEnabled","hasLoop","containerEl","currentHeight","innerHeight","points","point","minRatio","substr","value","sort","b","matchMedia","prepareClasses","prefix","resultClasses","item","classNames","addClasses","suffixes","removeClasses","classes","wasLocked","lastSlideRightEdge","checkOverflow$1","defaults","swiperElementNodeName","createElements","eventsPrefix","url","uniqueNavElements","passiveListeners","wrapperClass","_emitClasses","moduleExtendParams","allModulesParams","obj","moduleParamName","moduleParams","auto","prototypes","extendedDefaults","Swiper","prototype","toString","querySelectorAll","swipers","newParams","__swiper__","modules","__modules__","mod","swiperParams","passedParams","eventName","velocity","trunc","clickTimeout","velocities","imagesToLoad","imagesLoaded","property","setProgress","current","cls","join","getSlideClasses","updates","view","exact","spv","breakLoop","slideInView","complete","translateValue","translated","newDirection","needUpdate","currentDirection","changeLanguageDirection","mount","element","mounted","parentNode","toUpperCase","getWrapperSelector","trim","getWrapper","res","slideSlots","lazyElements","deleteInstance","cleanStyles","extendDefaults","newDefaults","installModule","use","module","m","prototypeGroup","protoMethod","S"],"mappings":"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","sourcesContent":["import { a as getWindow, g as getDocument } from './ssr-window.esm.mjs';\nimport { a as elementParents, o as elementStyle, e as elementChildren, s as setCSSProperty, f as elementOuterSize, p as elementNextAll, q as elementPrevAll, j as getTranslate, r as animateCSSModeScroll, n as nextTick, t as showWarning, c as createElement, d as now, u as extend, h as elementIndex, v as deleteProps } from './utils.mjs';\n\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && document.documentElement.style && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\n\nlet deviceCached;\nfunction calcDevice(_temp) {\n  let {\n    userAgent\n  } = _temp === void 0 ? {} : _temp;\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides) {\n  if (overrides === void 0) {\n    overrides = {};\n  }\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\n\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  const device = getDevice();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  const isWebView = /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent);\n  const isSafariBrowser = isSafari();\n  const need3dFix = isSafariBrowser || isWebView && device.ios;\n  return {\n    isSafari: needPerspectiveFix || isSafariBrowser,\n    needPerspectiveFix,\n    need3dFix,\n    isWebView\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\n\nfunction Resize(_ref) {\n  let {\n    swiper,\n    on,\n    emit\n  } = _ref;\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(_ref2 => {\n          let {\n            contentBoxSize,\n            contentRect,\n            target\n          } = _ref2;\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}\n\nfunction Observer(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const observers = [];\n  const window = getWindow();\n  const attach = function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.hostEl);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.hostEl, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}\n\n/* eslint-disable no-underscore-dangle */\n\nvar eventsEmitter = {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler() {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit() {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};\n\nfunction updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}\n\nfunction updateSlides() {\n  const swiper = this;\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(swiper.getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slides);\n  } else if (swiper.grid) {\n    swiper.grid.unsetSlides();\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slides);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[swiper.getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[swiper.getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[swiper.getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : swiper.getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap <= 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const offsetSize = (params.slidesOffsetBefore || 0) + (params.slidesOffsetAfter || 0);\n    if (allSlidesSize + offsetSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize - offsetSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  swiper.emit('slidesUpdated');\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}\n\nfunction updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}\n\nfunction updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}\n\nconst toggleSlideClasses$1 = (slideEl, condition, className) => {\n  if (condition && !slideEl.classList.contains(className)) {\n    slideEl.classList.add(className);\n  } else if (!condition && slideEl.classList.contains(className)) {\n    slideEl.classList.remove(className);\n  }\n};\nfunction updateSlidesProgress(translate) {\n  if (translate === void 0) {\n    translate = this && this.translate || 0;\n  }\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  let spaceBetween = params.spaceBetween;\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isFullyVisible = slideBefore >= 0 && slideBefore <= swiper.size - swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n    }\n    toggleSlideClasses$1(slide, isVisible, params.slideVisibleClass);\n    toggleSlideClasses$1(slide, isFullyVisible, params.slideFullyVisibleClass);\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}\n\nfunction updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}\n\nconst toggleSlideClasses = (slideEl, condition, className) => {\n  if (condition && !slideEl.classList.contains(className)) {\n    slideEl.classList.add(className);\n  } else if (!condition && slideEl.classList.contains(className)) {\n    slideEl.classList.remove(className);\n  }\n};\nfunction updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  let activeSlide;\n  let prevSlide;\n  let nextSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    if (gridEnabled) {\n      activeSlide = slides.filter(slideEl => slideEl.column === activeIndex)[0];\n      nextSlide = slides.filter(slideEl => slideEl.column === activeIndex + 1)[0];\n      prevSlide = slides.filter(slideEl => slideEl.column === activeIndex - 1)[0];\n    } else {\n      activeSlide = slides[activeIndex];\n    }\n  }\n  if (activeSlide) {\n    if (!gridEnabled) {\n      // Next Slide\n      nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n      if (params.loop && !nextSlide) {\n        nextSlide = slides[0];\n      }\n\n      // Prev Slide\n      prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n      if (params.loop && !prevSlide === 0) {\n        prevSlide = slides[slides.length - 1];\n      }\n    }\n  }\n  slides.forEach(slideEl => {\n    toggleSlideClasses(slideEl, slideEl === activeSlide, params.slideActiveClass);\n    toggleSlideClasses(slideEl, slideEl === nextSlide, params.slideNextClass);\n    toggleSlideClasses(slideEl, slideEl === prevSlide, params.slidePrevClass);\n  });\n  swiper.emitSlidesClasses();\n}\n\nconst processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    let lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (!lazyEl && swiper.isElement) {\n      if (slideEl.shadowRoot) {\n        lazyEl = slideEl.shadowRoot.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n      } else {\n        // init later\n        requestAnimationFrame(() => {\n          if (slideEl.shadowRoot) {\n            lazyEl = slideEl.shadowRoot.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n            if (lazyEl) lazyEl.remove();\n          }\n        });\n      }\n    }\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nconst preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  if (swiper.params.grid && swiper.params.grid.rows > 1) {\n    const activeColumn = activeIndex;\n    const preloadColumns = [activeColumn - amount];\n    preloadColumns.push(...Array.from({\n      length: amount\n    }).map((_, i) => {\n      return activeColumn + slidesPerView + i;\n    }));\n    swiper.slides.forEach((slideEl, i) => {\n      if (preloadColumns.includes(slideEl.column)) unlazy(swiper, i);\n    });\n    return;\n  }\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind || swiper.params.loop) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex < activeIndex || realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(activeIndex - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && (i > slideIndexLastInView || i < activeIndex)) {\n        unlazy(swiper, i);\n      }\n    }\n  }\n};\n\nfunction getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nfunction updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex && !swiper.params.loop) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n  if (activeIndex === previousIndex && swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n    swiper.realIndex = getVirtualRealIndex(activeIndex);\n    return;\n  }\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (gridEnabled) {\n    const firstSlideInColumn = swiper.slides.filter(slideEl => slideEl.column === activeIndex)[0];\n    let activeSlideIndex = parseInt(firstSlideInColumn.getAttribute('data-swiper-slide-index'), 10);\n    if (Number.isNaN(activeSlideIndex)) {\n      activeSlideIndex = Math.max(swiper.slides.indexOf(firstSlideInColumn), 0);\n    }\n    realIndex = Math.floor(activeSlideIndex / params.grid.rows);\n  } else if (swiper.slides[activeIndex]) {\n    const slideIndex = swiper.slides[activeIndex].getAttribute('data-swiper-slide-index');\n    if (slideIndex) {\n      realIndex = parseInt(slideIndex, 10);\n    } else {\n      realIndex = activeIndex;\n    }\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n    swiper.emit('slideChange');\n  }\n}\n\nfunction updateClickedSlide(el, path) {\n  const swiper = this;\n  const params = swiper.params;\n  let slide = el.closest(`.${params.slideClass}, swiper-slide`);\n  if (!slide && swiper.isElement && path && path.length > 1 && path.includes(el)) {\n    [...path.slice(path.indexOf(el) + 1, path.length)].forEach(pathEl => {\n      if (!slide && pathEl.matches && pathEl.matches(`.${params.slideClass}, swiper-slide`)) {\n        slide = pathEl;\n      }\n    });\n  }\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};\n\nfunction getSwiperTranslate(axis) {\n  if (axis === void 0) {\n    axis = this.isHorizontal() ? 'x' : 'y';\n  }\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}\n\nfunction setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate() {\n  return -this.snapGrid[0];\n}\n\nfunction maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}\n\nfunction translateTo(translate, speed, runCallbacks, translateBounds, internal) {\n  if (translate === void 0) {\n    translate = 0;\n  }\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  if (translateBounds === void 0) {\n    translateBounds = true;\n  }\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          swiper.animating = false;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}\n\nvar translate = {\n  getTranslate: getSwiperTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};\n\nfunction setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n    swiper.wrapperEl.style.transitionDelay = duration === 0 ? `0ms` : '';\n  }\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionEmit(_ref) {\n  let {\n    swiper,\n    runCallbacks,\n    direction,\n    step\n  } = _ref;\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}\n\nfunction transitionStart(runCallbacks, direction) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}\n\nfunction transitionEnd(runCallbacks, direction) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};\n\nfunction slideTo(index, speed, runCallbacks, internal, initial) {\n  if (index === void 0) {\n    index = 0;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (!enabled && !internal && !initial || swiper.destroyed || swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && (rtl ? translate > swiper.translate && translate > swiper.minTranslate() : translate < swiper.translate && translate < swiper.minTranslate())) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}\n\nfunction slideToLoop(index, speed, runCallbacks, internal) {\n  if (index === void 0) {\n    index = 0;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  if (swiper.destroyed) return;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  const gridEnabled = swiper.grid && swiper.params.grid && swiper.params.grid.rows > 1;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      let targetSlideIndex;\n      if (gridEnabled) {\n        const slideIndex = newIndex * swiper.params.grid.rows;\n        targetSlideIndex = swiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === slideIndex)[0].column;\n      } else {\n        targetSlideIndex = swiper.getSlideIndexByData(newIndex);\n      }\n      const cols = gridEnabled ? Math.ceil(swiper.slides.length / swiper.params.grid.rows) : swiper.slides.length;\n      const {\n        centeredSlides\n      } = swiper.params;\n      let slidesPerView = swiper.params.slidesPerView;\n      if (slidesPerView === 'auto') {\n        slidesPerView = swiper.slidesPerViewDynamic();\n      } else {\n        slidesPerView = Math.ceil(parseFloat(swiper.params.slidesPerView, 10));\n        if (centeredSlides && slidesPerView % 2 === 0) {\n          slidesPerView = slidesPerView + 1;\n        }\n      }\n      let needLoopFix = cols - targetSlideIndex < slidesPerView;\n      if (centeredSlides) {\n        needLoopFix = needLoopFix || targetSlideIndex < Math.ceil(slidesPerView / 2);\n      }\n      if (internal && centeredSlides && swiper.params.slidesPerView !== 'auto' && !gridEnabled) {\n        needLoopFix = false;\n      }\n      if (needLoopFix) {\n        const direction = centeredSlides ? targetSlideIndex < swiper.activeIndex ? 'prev' : 'next' : targetSlideIndex - swiper.activeIndex - 1 < swiper.params.slidesPerView ? 'next' : 'prev';\n        swiper.loopFix({\n          direction,\n          slideTo: true,\n          activeSlideIndex: direction === 'next' ? targetSlideIndex + 1 : targetSlideIndex - cols + 1,\n          slideRealIndex: direction === 'next' ? swiper.realIndex : undefined\n        });\n      }\n      if (gridEnabled) {\n        const slideIndex = newIndex * swiper.params.grid.rows;\n        newIndex = swiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === slideIndex)[0].column;\n      } else {\n        newIndex = swiper.getSlideIndexByData(newIndex);\n      }\n    }\n  }\n  requestAnimationFrame(() => {\n    swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  });\n  return swiper;\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext(speed, runCallbacks, internal) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled || swiper.destroyed) return swiper;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n    if (swiper.activeIndex === swiper.slides.length - 1 && params.cssMode) {\n      requestAnimationFrame(() => {\n        swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n      });\n      return true;\n    }\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev(speed, runCallbacks, internal) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled || swiper.destroyed) return swiper;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  } else if (params.loop && swiper.activeIndex === 0 && params.cssMode) {\n    requestAnimationFrame(() => {\n      swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n    });\n    return true;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset(speed, runCallbacks, internal) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  if (swiper.destroyed) return;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest(speed, runCallbacks, internal, threshold) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  if (threshold === void 0) {\n    threshold = 0.5;\n  }\n  const swiper = this;\n  if (swiper.destroyed) return;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide() {\n  const swiper = this;\n  if (swiper.destroyed) return;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};\n\nfunction loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const initSlides = () => {\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    slides.forEach((el, index) => {\n      el.setAttribute('data-swiper-slide-index', index);\n    });\n  };\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n  const slidesPerGroup = params.slidesPerGroup * (gridEnabled ? params.grid.rows : 1);\n  const shouldFillGroup = swiper.slides.length % slidesPerGroup !== 0;\n  const shouldFillGrid = gridEnabled && swiper.slides.length % params.grid.rows !== 0;\n  const addBlankSlides = amountOfSlides => {\n    for (let i = 0; i < amountOfSlides; i += 1) {\n      const slideEl = swiper.isElement ? createElement('swiper-slide', [params.slideBlankClass]) : createElement('div', [params.slideClass, params.slideBlankClass]);\n      swiper.slidesEl.append(slideEl);\n    }\n  };\n  if (shouldFillGroup) {\n    if (params.loopAddBlankSlides) {\n      const slidesToAdd = slidesPerGroup - swiper.slides.length % slidesPerGroup;\n      addBlankSlides(slidesToAdd);\n      swiper.recalcSlides();\n      swiper.updateSlides();\n    } else {\n      showWarning('Swiper Loop Warning: The number of slides is not even to slidesPerGroup, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)');\n    }\n    initSlides();\n  } else if (shouldFillGrid) {\n    if (params.loopAddBlankSlides) {\n      const slidesToAdd = params.grid.rows - swiper.slides.length % params.grid.rows;\n      addBlankSlides(slidesToAdd);\n      swiper.recalcSlides();\n      swiper.updateSlides();\n    } else {\n      showWarning('Swiper Loop Warning: The number of slides is not even to grid.rows, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)');\n    }\n    initSlides();\n  } else {\n    initSlides();\n  }\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}\n\nfunction loopFix(_temp) {\n  let {\n    slideRealIndex,\n    slideTo = true,\n    direction,\n    setTranslate,\n    activeSlideIndex,\n    byController,\n    byMousewheel\n  } = _temp === void 0 ? {} : _temp;\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  const {\n    centeredSlides\n  } = params;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  let slidesPerView = params.slidesPerView;\n  if (slidesPerView === 'auto') {\n    slidesPerView = swiper.slidesPerViewDynamic();\n  } else {\n    slidesPerView = Math.ceil(parseFloat(params.slidesPerView, 10));\n    if (centeredSlides && slidesPerView % 2 === 0) {\n      slidesPerView = slidesPerView + 1;\n    }\n  }\n  const slidesPerGroup = params.slidesPerGroupAuto ? slidesPerView : params.slidesPerGroup;\n  let loopedSlides = slidesPerGroup;\n  if (loopedSlides % slidesPerGroup !== 0) {\n    loopedSlides += slidesPerGroup - loopedSlides % slidesPerGroup;\n  }\n  loopedSlides += params.loopAdditionalSlides;\n  swiper.loopedSlides = loopedSlides;\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n  if (slides.length < slidesPerView + loopedSlides) {\n    showWarning('Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled and not function properly. You need to add more slides (or make duplicates) or lower the values of slidesPerView and slidesPerGroup parameters');\n  } else if (gridEnabled && params.grid.fill === 'row') {\n    showWarning('Swiper Loop Warning: Loop mode is not compatible with grid.fill = `row`');\n  }\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  const cols = gridEnabled ? Math.ceil(slides.length / params.grid.rows) : slides.length;\n  const activeColIndex = gridEnabled ? slides[activeSlideIndex].column : activeSlideIndex;\n  const activeColIndexWithShift = activeColIndex + (centeredSlides && typeof setTranslate === 'undefined' ? -slidesPerView / 2 + 0.5 : 0);\n  // prepend last slides before start\n  if (activeColIndexWithShift < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeColIndexWithShift, slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeColIndexWithShift; i += 1) {\n      const index = i - Math.floor(i / cols) * cols;\n      if (gridEnabled) {\n        const colIndexToPrepend = cols - index - 1;\n        for (let i = slides.length - 1; i >= 0; i -= 1) {\n          if (slides[i].column === colIndexToPrepend) prependSlidesIndexes.push(i);\n        }\n        // slides.forEach((slide, slideIndex) => {\n        //   if (slide.column === colIndexToPrepend) prependSlidesIndexes.push(slideIndex);\n        // });\n      } else {\n        prependSlidesIndexes.push(cols - index - 1);\n      }\n    }\n  } else if (activeColIndexWithShift + slidesPerView > cols - loopedSlides) {\n    slidesAppended = Math.max(activeColIndexWithShift - (cols - loopedSlides * 2), slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / cols) * cols;\n      if (gridEnabled) {\n        slides.forEach((slide, slideIndex) => {\n          if (slide.column === index) appendSlidesIndexes.push(slideIndex);\n        });\n      } else {\n        appendSlidesIndexes.push(index);\n      }\n    }\n  }\n  swiper.__preventObserver__ = true;\n  requestAnimationFrame(() => {\n    swiper.__preventObserver__ = false;\n  });\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(slides[index]);\n      slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(slides[index]);\n      slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  } else if (gridEnabled && (prependSlidesIndexes.length > 0 && isPrev || appendSlidesIndexes.length > 0 && isNext)) {\n    swiper.slides.forEach((slide, slideIndex) => {\n      swiper.grid.updateSlide(slideIndex, slide, swiper.slides);\n    });\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + Math.ceil(slidesPrepended), 0, false, true);\n          if (setTranslate) {\n            swiper.touchEventsData.startTranslate = swiper.touchEventsData.startTranslate - diff;\n            swiper.touchEventsData.currentTranslate = swiper.touchEventsData.currentTranslate - diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          const shift = gridEnabled ? prependSlidesIndexes.length / params.grid.rows : prependSlidesIndexes.length;\n          swiper.slideTo(swiper.activeIndex + shift, 0, false, true);\n          swiper.touchEventsData.currentTranslate = swiper.translate;\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touchEventsData.startTranslate = swiper.touchEventsData.startTranslate - diff;\n            swiper.touchEventsData.currentTranslate = swiper.touchEventsData.currentTranslate - diff;\n          }\n        }\n      } else {\n        const shift = gridEnabled ? appendSlidesIndexes.length / params.grid.rows : appendSlidesIndexes.length;\n        swiper.slideTo(swiper.activeIndex - shift, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix({\n          ...loopParams,\n          slideTo: c.params.slidesPerView === params.slidesPerView ? slideTo : false\n        });\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix({\n        ...loopParams,\n        slideTo: swiper.controller.control.params.slidesPerView === params.slidesPerView ? slideTo : false\n      });\n    }\n  }\n  swiper.emit('loopFix');\n}\n\nfunction loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};\n\nfunction setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}\n\nfunction unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor\n};\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base) {\n  if (base === void 0) {\n    base = this;\n  }\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nfunction preventEdgeSwipe(swiper, event, startX) {\n  const window = getWindow();\n  const {\n    params\n  } = swiper;\n  const edgeSwipeDetection = params.edgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n      return true;\n    }\n    return false;\n  }\n  return true;\n}\nfunction onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  const data = swiper.touchEventsData;\n  if (e.type === 'pointerdown') {\n    if (data.pointerId !== null && data.pointerId !== e.pointerId) {\n      return;\n    }\n    data.pointerId = e.pointerId;\n  } else if (e.type === 'touchstart' && e.targetTouches.length === 1) {\n    data.touchId = e.targetTouches[0].identifier;\n  }\n  if (e.type === 'touchstart') {\n    // don't proceed touch event\n    preventEdgeSwipe(swiper, e, e.targetTouches[0].pageX);\n    return;\n  }\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && e.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = e.composedPath ? e.composedPath() : e.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  if (!preventEdgeSwipe(swiper, e, startX)) {\n    return;\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (e.type === 'pointermove') {\n    if (data.touchId !== null) return; // return from pointer if we use touch\n    const id = e.pointerId;\n    if (id !== data.pointerId) return;\n  }\n  let targetTouch;\n  if (e.type === 'touchmove') {\n    targetTouch = [...e.changedTouches].filter(t => t.identifier === data.touchId)[0];\n    if (!targetTouch || targetTouch.identifier !== data.touchId) return;\n  } else {\n    targetTouch = e;\n  }\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  touches.previousX = touches.currentX;\n  touches.previousY = touches.currentY;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || e.type === 'touchmove' && data.preventTouchMoveFromPointerMove) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  const allowLoopFix = swiper.touchesDirection === 'next' && swiper.allowSlideNext || swiper.touchesDirection === 'prev' && swiper.allowSlidePrev;\n  if (!data.isMoved) {\n    if (isLoop && allowLoopFix) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true,\n        detail: {\n          bySwiperTouchMove: true\n        }\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  new Date().getTime();\n  if (data.isMoved && data.allowThresholdMove && prevTouchesDirection !== swiper.touchesDirection && isLoop && allowLoopFix && Math.abs(diff) >= 1) {\n    Object.assign(touches, {\n      startX: pageX,\n      startY: pageY,\n      currentX: pageX,\n      currentY: pageY,\n      startTranslate: data.currentTranslate\n    });\n    data.loopSwapReset = true;\n    data.startTranslate = data.currentTranslate;\n    return;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && allowLoopFix && !loopFixed && data.allowThresholdMove && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.slidesSizesGrid[swiper.activeIndex + 1] : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && allowLoopFix && !loopFixed && data.allowThresholdMove && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.slidesSizesGrid[swiper.slidesSizesGrid.length - 1] : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetTouch;\n  const isTouchEvent = e.type === 'touchend' || e.type === 'touchcancel';\n  if (!isTouchEvent) {\n    if (data.touchId !== null) return; // return from pointer if we use touch\n    if (e.pointerId !== data.pointerId) return;\n    targetTouch = e;\n  } else {\n    targetTouch = [...e.changedTouches].filter(t => t.identifier === data.touchId)[0];\n    if (!targetTouch || targetTouch.identifier !== data.touchId) return;\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave', 'contextmenu'].includes(e.type)) {\n    const proceed = ['pointercancel', 'contextmenu'].includes(e.type) && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  data.pointerId = null;\n  data.touchId = null;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && e.pointerType === 'mouse') return;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target, pathTree);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 && !data.loopSwapReset || data.currentTranslate === data.startTranslate && !data.loopSwapReset) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  const swipeToLast = currentPos >= -swiper.maxTranslate() && !swiper.params.loop;\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (swipeToLast || currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (swipeToLast || currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = params.virtual && params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}\n\nfunction onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  if (swiper.params.cssMode || swiper.params.slidesPerView !== 'auto' && !swiper.params.autoHeight) {\n    return;\n  }\n  swiper.update();\n}\n\nfunction onDocumentTouchStart() {\n  const swiper = this;\n  if (swiper.documentTouchHandlerProceeded) return;\n  swiper.documentTouchHandlerProceeded = true;\n  if (swiper.params.touchReleaseOnEdges) {\n    swiper.el.style.touchAction = 'auto';\n  }\n}\n\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n  if (!el || typeof el === 'string') return;\n\n  // Touch Events\n  document[domMethod]('touchstart', swiper.onDocumentTouchStart, {\n    passive: false,\n    capture\n  });\n  el[domMethod]('touchstart', swiper.onTouchStart, {\n    passive: false\n  });\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('touchmove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('touchend', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('touchcancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('contextmenu', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  swiper.onDocumentTouchStart = onDocumentTouchStart.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nvar events$1 = {\n  attachEvents,\n  detachEvents\n};\n\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nfunction setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasGrabCursor = swiper.params.grabCursor;\n  const isGrabCursor = breakpointParams.grabCursor;\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n  if (wasGrabCursor && !isGrabCursor) {\n    swiper.unsetGrabCursor();\n  } else if (!wasGrabCursor && isGrabCursor) {\n    swiper.setGrabCursor();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    if (typeof breakpointParams[prop] === 'undefined') return;\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  const wasLoop = params.loop;\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  const hasLoop = swiper.params.loop;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (initialized) {\n    if (needsReLoop) {\n      swiper.loopDestroy();\n      swiper.loopCreate(realIndex);\n      swiper.updateSlides();\n    } else if (!wasLoop && hasLoop) {\n      swiper.loopCreate(realIndex);\n      swiper.updateSlides();\n    } else if (wasLoop && !hasLoop) {\n      swiper.loopDestroy();\n    }\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}\n\nfunction getBreakpoint(breakpoints, base, containerEl) {\n  if (base === void 0) {\n    base = 'window';\n  }\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = {\n  setBreakpoint,\n  getBreakpoint\n};\n\nfunction prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nfunction addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}\n\nfunction removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  if (!el || typeof el === 'string') return;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}\n\nvar classes = {\n  addClasses,\n  removeClasses\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nvar checkOverflow$1 = {\n  checkOverflow\n};\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  swiperElementNodeName: 'SWIPER-CONTAINER',\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  eventsPrefix: 'swiper',\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopAddBlankSlides: true,\n  loopAdditionalSlides: 0,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideFullyVisibleClass: 'swiper-slide-fully-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};\n\nfunction moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (moduleParamName === 'navigation' && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].prevEl && !params[moduleParamName].nextEl) {\n      params[moduleParamName].auto = true;\n    }\n    if (['pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].el) {\n      params[moduleParamName].auto = true;\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}\n\n/* eslint no-param-reassign: \"off\" */\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events: events$1,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor() {\n    let el;\n    let params;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        pointerId: null,\n        touchId: null\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getDirectionLabel(property) {\n    if (this.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view, exact) {\n    if (view === void 0) {\n      view = 'current';\n    }\n    if (exact === void 0) {\n      exact = false;\n    }\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (typeof params.slidesPerView === 'number') return params.slidesPerView;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex] ? Math.ceil(slides[activeIndex].swiperSlideSize) : 0;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += Math.ceil(slides[i].swiperSlideSize);\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (params.freeMode && params.freeMode.enabled && !params.cssMode) {\n      setTranslate();\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !params.centeredSlides) {\n        const slides = swiper.virtual && params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate) {\n    if (needUpdate === void 0) {\n      needUpdate = true;\n    }\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.parentNode && el.parentNode.host && el.parentNode.host.nodeName === swiper.params.swiperElementNodeName.toUpperCase()) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement && !el.parentNode.host.slideSlots ? el.parentNode.host : wrapperEl,\n      hostEl: swiper.isElement ? el.parentNode.host : el,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    const lazyElements = [...swiper.el.querySelectorAll('[loading=\"lazy\"]')];\n    if (swiper.isElement) {\n      lazyElements.push(...swiper.hostEl.querySelectorAll('[loading=\"lazy\"]'));\n    }\n    lazyElements.forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance, cleanStyles) {\n    if (deleteInstance === void 0) {\n      deleteInstance = true;\n    }\n    if (cleanStyles === void 0) {\n      cleanStyles = true;\n    }\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      if (el && typeof el !== 'string') {\n        el.removeAttribute('style');\n      }\n      if (wrapperEl) {\n        wrapperEl.removeAttribute('style');\n      }\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideFullyVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      if (swiper.el && typeof swiper.el !== 'string') {\n        swiper.el.swiper = null;\n      }\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\n\nexport { Swiper as S, defaults as d };\n"]},"metadata":{},"sourceType":"module"}